// import { useGSAP } from "@gsap/react";
// import gsap from "gsap";
// import { ScrollTrigger } from "gsap/all";

// const CAMERAROLL = [
//   { id: "c1", image: "/images/cam-roll1.avif", imageHeight: "90%" },
//   { id: "c2", image: "/images/can-roll2.avif", imageHeight: "80%" },
//   { id: "c3", image: "/images/cam-roll3.jpg", imageHeight: "80%" },
//   { id: "c4", image: "/images/cam-roll4.avif", imageHeight: "80%" },
//   { id: "c5", image: "/images/cma-roll5.avif", imageHeight: "80%" },
// ];

// gsap.registerPlugin(ScrollTrigger);
// export default function RefenceImage() {
//   useGSAP(() => {
//     // Single ScrollTrigger that handles everything
//     const mainTl = gsap.timeline({
//       scrollTrigger: {
//         trigger: "#mainContainer",
//         pin: true,
//         pinSpacing: false,
//         start: "top top",
//         end: "+=350%",
//         scrub: 1,
//         markers: true,
//       },
//     });

//     // mainTl.to("#mainContainer", { y: 0 });
//     // Phase 1: Fade out first image (0-25% of scroll)
//     mainTl.to("#firstImageText", { opacity: 0, duration: 0.25 });
//     mainTl.to("#firstImage", { opacity: 0, duration: 0.25 }, "-=0.1");

//     // Phase 2: Show image roll (25-30% of scroll)
//     mainTl.set("#rollDiv", { display: "block", opacity: 0 });
//     mainTl.fromTo("#rollDiv", { opacity: 0 }, { opacity: 1, duration: 0.25 });
//     // Phase 3: Fade out first text and bring in second text
//     mainTl.to("#firstText", {
//       opacity: 0,
//       duration: 0.25,
//     });
//     mainTl.fromTo(
//       "#secondText",
//       {
//         opacity: 0,
//         y: "100%",
//       },
//       {
//         opacity: 1,
//         y: "0%",
//         duration: 0.25,
//       },
//       "-=0.1"
//     );

//     // Phase 4: Animate camera roll items scrolling up
//     // This will move the entire roll container up, creating the scroll effect
//     mainTl.to("#rollDiv", {
//       y: `-${(CAMERAROLL.length - 1) * 100}vh`, // Move up by the height of all items minus one
//       duration: 2, // Longer duration for smooth scrolling through all items
//       ease: "none",
//     });

//     // Phase 3: Animate camera roll items (30-100% of scroll)
//     // mainTl.to("#rollDiv", { y: -12 });
//   }, []);
//   return (
//     <main
//       className="h-dvh w-dvw bg-white overflow-x-hidden relative"
//       id="mainContainer"
//     >
//       <div
//         className="w-[170%] md:w-full h-full bg-[url('/images/cma-roll5.avif')] bg-cover bg-no-repeat bg-[length:180%] md:bg-[length:133%] bg-[position:-10rem_1rem] md:bg-[position:center_-24em] object-fill"
//         id="firstImage"
//       >
//         <h2
//           className="text-white text-center font-garamond font-normal w-[15ch] md:w-[19ch] leading-[1] -tracking-[1.5px] text-[28px] md:text-[64px] absolute top-[45%] md:top-[35%] left-[5%] md:left-[25%] z-1"
//           id="firstImageText"
//         >
//           Remember when every shot was a moment to cherish
//         </h2>
//       </div>
//       <div
//         className="w-full h-dvh bg-[#080808] overflow-y-hidden opacity-0"
//         id="rollDiv"
//       >
//         {/* <div className="flex flex-col items-center justify-center"> */}
//         <div
//           className={`flex flex-col items-center justify-center h-[${
//             CAMERAROLL.length * 100
//           }%]`}
//         >
//           {CAMERAROLL.map((item) => (
//             <div key={item.id} className="relative w-[30%]" id={item.id}>
//               <img src={item.image} className={`h-${item.imageHeight}`} />
//             </div>
//           ))}
//         </div>
//         <h2
//           className="text-white text-center font-garamond font-normal w-[90%] md:w-[90%] leading-[1] -tracking-[1.5px] text-[28px] md:text-[64px] absolute top-[45%] md:top-[35%] left-[5%] md:left-[5%] z-1"
//           id="firstText"
//         >
//           The aF-1 helps you to slow down, observe your surroundings and focus
//           on the beauty of the present
//         </h2>
//         <span id="secondText" className="opacity-0">
//           <h3 className="w-[19ch]">
//             Discover the joy of capturing life, one frame at a time
//           </h3>
//         </span>
//       </div>
//       {/* )} */}
//     </main>
//   );
// }

// // ScrollTrigger.create({
// //               trigger: "#c1",
// //               start: "top top",
// //               end: "bottom 80%",
// //               pin: true,
// //               pinSpacing: false,
// //               markers: true, // Remove this in production
// //               onEnter: () => console.log("c1 enter and pinned"),
// //               onLeave: () => console.log("c1 leave and unpinned"),
// //               onEnterBack: () => console.log("c1 enter back"),
// //               onLeaveBack: () => console.log("c1 leave back"),
// //             });

// // ScrollTrigger.create({
// //       trigger: "#mainContainer",
// //       pin: true,
// //       pinSpacing: false,
// //       start: "top top",
// //       end: "+=200%", // Adjust based on your content
// //       onUpdate: (self) => {
// //         // Animate elements based on scroll progress
// //         const progress = self.progress;

// //         // Example animations based on scroll progress
// //         gsap.to("#imageRoll", {
// //           display: "block",
// //           y: progress * -50,
// //           duration: 0.1,
// //           ease: "elastic.in",
// //         });
// //       },
// //     });

// import { useGSAP } from "@gsap/react";
// import gsap from "gsap";
// import { ScrollTrigger } from "gsap/all";
// import { ScrollToPlugin } from "gsap/ScrollToPlugin";
// import { useEffect, useRef, useState } from "react";

// const CAMERAROLL = [
//   { id: "c1", image: "/images/cam-roll1.avif", imageHeight: "90%" },
//   { id: "c2", image: "/images/can-roll2.avif", imageHeight: "80%" },
//   { id: "c3", image: "/images/cam-roll3.jpg", imageHeight: "80%" },
//   { id: "c4", image: "/images/cam-roll4.avif", imageHeight: "80%" },
//   { id: "c5", image: "/images/cma-roll5.avif", imageHeight: "80%" },
// ];

// gsap.registerPlugin(ScrollTrigger, ScrollToPlugin);
// type RefsType = {
//   [key: string]: HTMLDivElement | null;
// };

// export default function RefenceImage() {
//   const rollDivRef = useRef<HTMLDivElement | null>(null);
//   const refs = useRef<RefsType>({});
//   const firstImgRef = useRef<number>(0);

//   const triggerRef = useRef(null);

//   useGSAP(
//     () => {
//       // Single ScrollTrigger that handles everything
//       // const mainTl = gsap.timeline();
//       const imgRollDiv = document.getElementById("imgRollDiv");

//       // const computedStyle = getComputedStyle(imgRollDiv);
//       gsap.set("#imgRollDiv", {
//         width: "50%",
//         y: 100,
//       });
//       const mainTl = gsap.timeline({
//         scrollTrigger: {
//           trigger: "#rollWrapper",
//           start: "top 90%",
//           end: "top 30%",
//           scrub: 1,
//           markers: true,
//         },
//       });
//       if (!rollDivRef.current) return;
//       // gsap.set("#imgRollDiv",);
//       mainTl.to("#imgRollDiv", {
//         width: "30%",
//         y: 0,
//         duration: 1,
//         ease: "power2.out",
//       });
//     },
//     {
//       dependencies: [],
//       revertOnUpdate: true,
//     }
//   );

//   return (
//     <main
//       className="h-dvh w-dvw bg-white overflow-x-hidden relative"
//       id="mainContainer"
//     >
//       <div
//         className="w-[170%] md:w-full h-full bg-[url('/images/cma-roll5.avif')] bg-cover bg-no-repeat bg-[length:180%] md:bg-[length:133%] bg-[position:-10rem_1rem] md:bg-[position:center_-24em] object-fill h-[dvh]"
//         id="firstImage"
//       >
//         <h2
//           className="text-white text-center font-garamond font-normal w-[15ch] md:w-[19ch] leading-[1] -tracking-[1.5px] text-[28px] md:text-[64px] absolute top-[45%] md:top-[35%] left-[5%] md:left-[25%] z-4"
//           id="firstImageText"
//         >
//           Remember when every shot was a moment to cherish
//         </h2>
//       </div>

      {/* <span id="secondText" className="absolute bottom-[10%] right-[5%] z-10">
        <h3 className=" w-[10ch] md:w-[19ch] text-white leading-[1] text-base md:text-[28px] -tracking-[1.5px] font-bold">
          Discover the joy of capturing life, one frame at a time
        </h3>
      </span>
      <span id="thirdText" className="absolute bottom-[10%] right-[5%] z-2">
        <h3 className="w-[8ch]  text-white leading-[1] text-base md:text-[28px] -tracking-[1.5px] font-bold ">
          Greatness, takes time
        </h3>
      </span>
      {/* <div
        className="flex justify-center items-center w-full bg-[#080808] overflow-y-scroll no-scrollbar"
        id="rollDiv"
      > */}
      <div id="rollWrapper" className="relative w-full h-[100vh]">
        <div
          className="flex justify-center items-center w-full bg-[#080808] no-scrollbar  h-[dvh]"
          id="rollDiv"
          ref={rollDivRef}
        >
          <h2
            className="text-white text-center font-garamond font-normal w-[90%] md:w-[90%] leading-[1] -tracking-[1.5px] text-[28px] md:text-[64px] absolute top-[45%] md:top-[50%] left-[5%] md:left-[5%] z-10"
            id="firstText"
          >
            The aF-1 helps you to slow down, observe your surroundings and focus
            on the beauty of the present
          </h2>
          <div
            className={`relative flex flex-col items-center justify-center  pt-6`}
            id="imgRollDiv"
          >
            {CAMERAROLL.map((item) => (
              <div
                key={item.id}
                className="relative w-full"
                id={item.id}
                ref={(el) => {
                  (refs.current[item.id] as HTMLDivElement | null) = el;
                }}
              >
                <img
                  src={item.image}
                  className={`h-${item.imageHeight} w-full`}
                />
              </div>
            ))}
          </div>
        </div>
      </div>
    </main>
  );
}

// useEffect(() => {
//     const el = refs.current["c1"];
//     if (!el) return;

//     let prevY = el.getBoundingClientRect().y;
//     let rafId: number;

//     const track = () => {
//       const y = el.getBoundingClientRect().y;
//       if (y !== prevY) {
//         firstImgRef.current = y;
//         // console.log("Y changed:", y);
//         if (firstImgRef.current < 613) {
//           setFirstImg(true);
//         }
//         prevY = y;
//       }
//       rafId = requestAnimationFrame(track);
//     };

//     track();

//     return () => cancelAnimationFrame(rafId);
//   }, []);

// useEffect(() => {
//   const el = refs.current["c1"];
//   if (!el) return;

//   const observer = new IntersectionObserver(([entry]) => {
//     if (entry.isIntersecting) {
//       const rect = el.getBoundingClientRect();
//       console.log(rect);
//     }
//   });

//   observer.observe(el);

//   return () => observer.disconnect();
// }, [refs.current["c1"].y]);

// ScrollTrigger.create({
//               trigger: "#c1",
//               start: "top top",
//               end: "bottom 80%",
//               pin: true,
//               pinSpacing: false,
//               markers: true, // Remove this in production
//               onEnter: () => console.log("c1 enter and pinned"),
//               onLeave: () => console.log("c1 leave and unpinned"),
//               onEnterBack: () => console.log("c1 enter back"),
//               onLeaveBack: () => console.log("c1 leave back"),
//             });

// ScrollTrigger.create({
//       trigger: "#mainContainer",
//       pin: true,
//       pinSpacing: false,
//       start: "top top",
//       end: "+=200%", // Adjust based on your content
//       onUpdate: (self) => {
//         // Animate elements based on scroll progress
//         const progress = self.progress;

//         // Example animations based on scroll progress
//         gsap.to("#imageRoll", {
//           display: "block",
//           y: progress * -50,
//           duration: 0.1,
//           ease: "elastic.in",
//         });
//       },
//     });

